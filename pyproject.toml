[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "discos"
authors = [{name = "Jordan Fox", email = "jmrfox@example.com"}]
description = "Discrete Collinear Skeletonization for 3D mesh processing and neuronal morphology analysis"
readme = "README.md"
requires-python = ">=3.8"
keywords = ["neuroscience", "mesh-processing", "skeletonization", "swc", "neuron", "morphology"]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Biology",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "numpy>=1.20.0",
    "trimesh>=3.15.0",
    "networkx>=2.6",
    "matplotlib>=3.5.0",
    "plotly>=5.0.0",
    "scipy>=1.10.1",
    "shapely>=2.0.7",
    "mapbox-earcut>=1.0.1",
    "manifold3d>=3.2.1",
    "triangle>=20250106",
    "rtree>=1.0.1",
    "ipykernel>=6.29.5",
    "nbformat>=5.10.4",
    "pandas>=2.0.3",
    "pymeshlab>=2025.7",
    "pdoc>=14.7.0",
    "cgal>=6.0.1.post202410241521",
]
dynamic = ["version"]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov",
    "black",
    "flake8",
    "mypy",
    "sphinx",
    "sphinx-rtd-theme",
]

[project.urls]
Homepage = "https://github.com/jmrfox/discos"
Documentation = "https://github.com/jmrfox/discos/wiki"
Repository = "https://github.com/jmrfox/discos.git"
"Bug Tracker" = "https://github.com/jmrfox/discos/issues"

[project.scripts]
discos = "discos.cli:main"

[tool.setuptools]
packages = ["discos"]

[tool.setuptools_scm]
write_to = "discos/_version.py"

[tool.black]
line-length = 88
target-version = ['py38']

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[dependency-groups]
dev = [
    "black>=24.8.0",
    "flake8>=5.0.4",
    "isort>=5.13.2",
    "mypy>=1.14.1",
    "pytest>=8.3.5",
]
